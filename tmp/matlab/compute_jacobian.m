function jacobian = compute_jacobian(Ps, U)
jacobian=[];
U=[U;1];
for i=1:length(Ps)
    j=[Ps{i}(1,1)*Ps{i}(3,:)*U-Ps{i}(3,1)*Ps{i}(1,:)*U,...
        Ps{i}(1,2)*Ps{i}(3,:)*U-Ps{i}(3,2)*Ps{i}(1,:)*U,...
        Ps{i}(1,3)*Ps{i}(3,:)*U-Ps{i}(3,3)*Ps{i}(1,:)*U;
        Ps{i}(2,1)*Ps{i}(3,:)*U-Ps{i}(3,1)*Ps{i}(2,:)*U,...
        Ps{i}(2,2)*Ps{i}(3,:)*U-Ps{i}(3,2)*Ps{i}(2,:)*U,...
        Ps{i}(2,3)*Ps{i}(3,:)*U-Ps{i}(3,3)*Ps{i}(2,:)*U]/(Ps{i}(3,:)*U)^2;
    jacobian=[jacobian;j];
end